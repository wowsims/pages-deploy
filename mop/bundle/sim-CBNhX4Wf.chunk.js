import{G as e,J as t,m as a,l as n,n as s,q as i,K as o,s as r,D as l,u as d,T as c,z as g,t as p}from"./preset_utils-Cz_ySDGC.chunk.js";import{R as u}from"./suggest_reforges_action-pxTJ5qRK.chunk.js";import{N as h,F as m,G as S,J as f,O as I,U as y,a as v,L as P,Q as R,V as T,M as w}from"./detailed_results-BEc8O_jh.chunk.js";import{g as A,P as O,h as k,G as H,j as M,k as C,H as G,R as E,S as b,D,l as F,m as x,n as W,F as B,C as j}from"./localization-kgGUpfrJ.chunk.js";import{S as V}from"./inputs-Cft2e158.chunk.js";const U=e({fieldName:"syncType",label:"Swing Sync Setting",labelTooltip:"Choose your sync option Perfect\n\t\t<ul>\n\t\t\t<li><div>None: No Sync used for mismatched weapon speeds</div></li>\n\t\t\t<li><div>Sync: Makes your weapons always attack at the same time, for match weapon speeds</div></li>\n\t\t</ul>",values:[{name:"None",value:h.WarriorNoSync},{name:"Sync",value:h.WarriorSyncMainhandOffhandSwings}]}),L=t({fieldName:"useItemSwapBonusStats",label:"Assume Prepull Mastery Elixir",labelTooltip:"Enabling this assumes you are using a Mastery Elixir during prepull.",getValue:e=>e.getSpecOptions().useItemSwapBonusStats,setValue:(e,t,a)=>{const n=t.getSpecOptions();n.useItemSwapBonusStats=a;const s=a?(new m).withStat(A.StatMasteryRating,225+(t.hasProfession(O.Alchemy)?40:0)):new m;t.itemSwapSettings.setBonusStats(e,s),t.setSpecOptions(e,n)}}),N={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:2457}}},doAtValue:{const:{val:"-10s"}}},{action:{move:{rangeFromTarget:{const:{val:"9"}}}},doAtValue:{const:{val:"-5s"}}},{action:{castSpell:{spellId:{spellId:6673}}},doAtValue:{const:{val:"-3"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1.5"}}},{action:{castSpell:{spellId:{spellId:1249459}}},doAtValue:{const:{val:"-1.5"}}},{action:{castSpell:{spellId:{spellId:1250619}}},doAtValue:{const:{val:"0"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{or:{vals:[{isExecutePhase:{threshold:"E20"}},{cmp:{op:"OpLe",lhs:{remainingTime:{}},rhs:{const:{val:"25"}}}}]}},castSpell:{spellId:{otherId:"OtherActionPotion"}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:114206,tag:-1},includeReactionTime:!0}}}},castSpell:{spellId:{spellId:114206}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:12880},includeReactionTime:!0}}}},castSpell:{spellId:{spellId:18499}}}},{action:{condition:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:86346},includeReactionTime:!0}},castSpell:{spellId:{spellId:6544}}}},{action:{castSpell:{spellId:{spellId:23881}}}},{action:{condition:{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:86346},includeReactionTime:!0}}}},castSpell:{spellId:{spellId:86346}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"3"}}}},castSpell:{spellId:{spellId:107570,tag:1}}}},{action:{castSpell:{spellId:{spellId:5308}}}},{action:{castSpell:{spellId:{spellId:85288,tag:1}}}},{action:{condition:{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}},castSpell:{spellId:{spellId:1680,tag:1}}}},{action:{condition:{auraIsActive:{auraId:{spellId:46916},includeReactionTime:!0}},castSpell:{spellId:{spellId:100130}}}},{action:{condition:{and:{vals:[{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:86346},includeReactionTime:!0}},{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"80"}}}}]}},castSpell:{spellId:{spellId:78}}}},{action:{condition:{and:{vals:[{not:{val:{isExecutePhase:{threshold:"E20"}}}},{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"60"}}}}]}},castSpell:{spellId:{spellId:78}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLt",lhs:{currentRage:{}},rhs:{const:{val:"80"}}}},{cmp:{op:"OpGe",lhs:{autoTimeToNext:{}},rhs:{const:{val:"2s"}}}},{spellIsReady:{spellId:{spellId:1250619}}}]}},move:{rangeFromTarget:{const:{val:"9"}}}}},{action:{castSpell:{spellId:{spellId:1250619}}}},{action:{condition:{and:{vals:[{not:{val:{spellCanCast:{spellId:{spellId:1250619}}}}},{not:{val:{unitIsMoving:{}}}},{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"1.5"}}}}]}},castSpell:{spellId:{spellId:46924}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentRage:{}},rhs:{const:{val:"80"}}}},castSpell:{spellId:{spellId:6673}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:1249459}}}}]},q={items:[{id:87192,gems:[76886,76575],reforging:137},{id:86967,reforging:168},{id:86986,enchant:4803,gems:[76631]},{id:87026,enchant:4424},{id:87193,enchant:4419,gems:[76631,76631],reforging:154},{id:90506,enchant:4415,gems:[76631],reforging:166},{id:87194,enchant:4432,gems:[76631],reforging:161,tinker:4898},{id:87186,enchant:4223,gems:[76575,76631],reforging:140},{id:87195,enchant:4823,gems:[76631],reforging:166},{id:87015,enchant:4429,gems:[76631],reforging:168},{id:87158,reforging:139},{id:86957,reforging:152},{id:87072,reforging:152},{id:79327},{id:87173,enchant:4444,gems:[89881],reforging:137},{id:86987,enchant:4444,gems:[76575],reforging:166}]},_={items:[{id:87192,gems:[76886,76575],reforging:137},{id:86967},{id:86986,enchant:4803,gems:[76631],reforging:168},{id:87026,enchant:4424,reforging:158},{id:87193,enchant:4419,gems:[76631,76631],reforging:154},{id:90506,enchant:4415,gems:[76631],reforging:166},{id:87194,enchant:4432,gems:[76631],tinker:4898},{id:87186,enchant:4223,gems:[76575,76631]},{id:87195,enchant:4823,gems:[76631],reforging:166},{id:87015,enchant:4429,gems:[76631],reforging:168},{id:87158,reforging:140},{id:86957,reforging:152},{id:87072,reforging:152},{id:79327},{id:87176,enchant:4444,gems:[89881]},{id:87176,enchant:4444,gems:[0],reforging:165}]},z={items:[{id:77539,gems:[76886,77545,77541]},{id:90592,reforging:165},{id:89345,enchant:4803,gems:[76631],reforging:139},{id:90580,enchant:4424,reforging:153},{id:82975,enchant:4419,gems:[76631,76575],reforging:168},{id:88879,enchant:4415,gems:[76631]},{id:82976,enchant:4432,gems:[76631,76631],tinker:4898},{id:84950,enchant:4223,gems:[76575,76631],reforging:165},{id:84507,enchant:4823,gems:[76631,76631],reforging:153},{id:84810,enchant:4429,gems:[76631],reforging:168},{id:90862,reforging:152},{id:81251,reforging:158},{id:81138},{id:79327},{id:87542,enchant:4444,reforging:139},{id:87542,enchant:4444,reforging:139}]},J={onLoad:e=>{o([{condition:e=>e.getEquippedItem(C.ItemSlotMainHand)?.item.handType===G.HandTypeTwoHand,message:"Check your gear: You have a two-handed weapon equipped, but the selected option is for one-handed weapons."}],e)}},Y={onLoad:e=>{o([{condition:e=>e.getEquippedItem(C.ItemSlotMainHand)?.item.handType===G.HandTypeOneHand,message:"Check your gear: You have a one-handed weapon equipped, but the selected option is for two-handed weapons."}],e)}},K=a("Preraid - SMF",{items:[{id:77539,gems:[76886,77545,77541]},{id:90592,reforging:168},{id:89345,enchant:4803,gems:[76631],reforging:146},{id:90580,enchant:4424,reforging:153},{id:82975,enchant:4419,gems:[76631,76575],reforging:165},{id:88879,enchant:4415,gems:[76631],reforging:144},{id:82976,enchant:4432,gems:[76631,76631],reforging:168,tinker:4898},{id:84950,enchant:4223,gems:[76575,76631],reforging:165},{id:84507,enchant:4823,gems:[76631,76631],reforging:153},{id:84810,enchant:4429,gems:[76631],reforging:168},{id:90862,reforging:151},{id:81251},{id:81138},{id:79327},{id:87545,enchant:4444,reforging:168},{id:87545,enchant:4444,reforging:168}]},J),Q=a("Preraid - TG",z,Y),X=a("P1 - SMF",q,J),Z=a("P1 - TG",_,Y),$=n("Default",N),ee=s("P1 - SMF",m.fromMap({[A.StatStrength]:1,[A.StatAgility]:.06,[A.StatAttackPower]:.45,[A.StatExpertiseRating]:1.19,[A.StatHitRating]:1.37,[A.StatCritRating]:.94,[A.StatHasteRating]:.41,[A.StatMasteryRating]:.59},{[k.PseudoStatMainHandDps]:2.15,[k.PseudoStatOffHandDps]:1.31}),J),te=s("P1 - TG",m.fromMap({[A.StatStrength]:1,[A.StatAgility]:.07,[A.StatAttackPower]:.45,[A.StatExpertiseRating]:1.42,[A.StatHitRating]:1.62,[A.StatCritRating]:1.07,[A.StatHasteRating]:.41,[A.StatMasteryRating]:.7},{[k.PseudoStatMainHandDps]:2.59,[k.PseudoStatOffHandDps]:1.11}),Y),ae={name:"SMF",data:S.create({talentsString:"133333",glyphs:H.create({major1:f.GlyphOfBullRush,major2:f.GlyphOfDeathFromAbove,major3:f.GlyphOfUnendingRage})}),...J},ne={name:"TG",data:S.create({talentsString:"133133",glyphs:H.create({major1:f.GlyphOfBullRush,major2:f.GlyphOfDeathFromAbove,major3:f.GlyphOfUnendingRage})}),...Y},se=I.create({classOptions:{},syncType:0}),ie=M.create({flaskId:76088,foodId:74646,potId:76095,prepotId:76095}),oe={profession1:O.Engineering,profession2:O.Blacksmithing,distanceFromTarget:15},re=i("P1 - SMF",{gear:X,talents:ae,epWeights:ee}),le=i("P1 - TG",{gear:Z,talents:ne,epWeights:te}),de=r(b.SpecFuryWarrior,{cssClass:"fury-warrior-sim-ui",cssScheme:v.getCssClass(v.Warrior),knownIssues:[],epStats:[A.StatStrength,A.StatAgility,A.StatAttackPower,A.StatExpertiseRating,A.StatHitRating,A.StatCritRating,A.StatHasteRating,A.StatMasteryRating],epPseudoStats:[k.PseudoStatMainHandDps,k.PseudoStatOffHandDps],epReferenceStat:A.StatStrength,displayStats:y.createDisplayStatArray([A.StatHealth,A.StatStamina,A.StatStrength,A.StatAgility,A.StatAttackPower,A.StatExpertiseRating,A.StatMasteryRating],[k.PseudoStatPhysicalHitPercent,k.PseudoStatPhysicalCritPercent,k.PseudoStatMeleeHastePercent]),defaults:{gear:Z.gear,epWeights:te.epWeights,statCaps:(new m).withStat(A.StatExpertiseRating,30*w),softCapBreakpoints:[R.fromPseudoStat(k.PseudoStatPhysicalHitPercent,{breakpoints:[7.5,27],capType:T.TypeSoftCap,postCapEPs:[0,0]})],other:oe,consumables:ie,talents:ne.data,specOptions:se,raidBuffs:W.create({...P(j.ClassWarrior),legacyOfTheEmperor:!0,legacyOfTheWhiteTiger:!0,darkIntent:!0,trueshotAura:!0,unleashedRage:!0,moonkinAura:!0,blessingOfMight:!0,bloodlust:!0}),partyBuffs:x.create({}),individualBuffs:F.create({}),debuffs:D.create({physicalVulnerability:!0,weakenedArmor:!0,masterPoisoner:!0})},playerIconInputs:[],includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[U,V(),l,d,c,g,L]},itemSwapSlots:[C.ItemSlotTrinket1,C.ItemSlotTrinket2,C.ItemSlotMainHand,C.ItemSlotOffHand],encounterPicker:{showExecuteProportion:!0},presets:{epWeights:[ee,te,ee,te],talents:[ae,ne],rotations:[$],gear:[K,Q,X,Z],builds:[re,le]},autoRotation:e=>$.rotation.rotation,raidSimPresets:[{spec:b.SpecFuryWarrior,talents:ae.data,specOptions:se,consumables:ie,defaultFactionRaces:{[B.Unknown]:E.RaceUnknown,[B.Alliance]:E.RaceWorgen,[B.Horde]:E.RaceTroll},defaultGear:{[B.Unknown]:{},[B.Alliance]:{1:X.gear,2:Z.gear,3:K.gear,4:Q.gear},[B.Horde]:{1:X.gear,2:Z.gear,3:K.gear,4:Q.gear}},otherDefaults:oe}]});class ce extends p{constructor(e,t){super(e,t,de),t.sim.waitForInit().then(()=>{new u(this,{getEPDefaults:e=>{e.getGear().getEquippedItems().some(e=>(e?.item.phase||0)>=3);return te.epWeights}})})}}export{ce as F};
