import{J as e,a9 as t,aa as a,ac as i,m as n,k as s,l as r,n as o,aj as l,s as g,u as d,D as c,T as p,z as m,W as f,a7 as h,a8 as u,ak as S,t as T}from"./preset_utils-Cz_ySDGC.chunk.js";import{R as y}from"./suggest_reforges_action-pxTJ5qRK.chunk.js";import{bT as I,fn as v,T as w,F as A,fo as b,G as k,fp as R,ar as B,U as P,a as W,bF as O,bE as C,a6 as E,d_ as L,L as M,M as N}from"./detailed_results-BEc8O_jh.chunk.js";import{g as H,h as x,S as D,G as F,j as J,R as $,P as j,k as U,D as V,l as G,m as _,n as q,F as z}from"./localization-kgGUpfrJ.chunk.js";const K=e({fieldName:"assumeBleedActive",label:"Assume Bleed Always Active",labelTooltip:"Assume bleed always exists for 'Rend and Tear' calculations. Otherwise will only calculate based on own rip/rake/lacerate.",extraCssClasses:["within-raid-sim-hide"]}),Q=e({fieldName:"cannotShredTarget",label:"Cannot Shred Target",labelTooltip:'Alternative to "In Front of Target" for modeling bosses that do not Parry or Block, but which you still cannot Shred.'});function X(e){const t=e.getSimpleRotation();return t.manualParams&&t.rotationType==I.SingleTarget}const Y={inputs:[t({fieldName:"rotationType",label:"Type",values:[{name:"Single Target",value:I.SingleTarget}]}),a({fieldName:"bearWeave",label:"Enable bear-weaving",labelTooltip:"Weave into Bear Form while pooling Energy"}),a({fieldName:"snekWeave",label:"Use Albino Snake",labelTooltip:"Reset swing timer at the end of bear-weaves using Albino Snake pet",showWhen:e=>e.getSimpleRotation().bearWeave}),a({fieldName:"useNs",label:"Use Nature's Swiftness",labelTooltip:"Use Nature's Swiftness to fill gaps in Predatory Swiftness uptime",showWhen:e=>e.getTalents().dreamOfCenarius,changeEmitter:e=>w.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),t({fieldName:"hotwStrategy",label:"Heart of the Wild usage",values:[{name:"Passives only",value:v.PassivesOnly},{name:"Enhanced bear-weaving",value:v.Bear},{name:"Wrath-weaving",value:v.Wrath}],showWhen:e=>e.getTalents().heartOfTheWild,changeEmitter:e=>w.onAny([e.rotationChangeEmitter,e.talentsChangeEmitter])}),a({fieldName:"allowAoeBerserk",label:"Allow AoE Berserk",labelTooltip:"Allow Berserk usage in AoE rotation",showWhen:e=>e.getSimpleRotation().rotationType==I.Aoe}),a({fieldName:"manualParams",label:"Manual Advanced Parameters",labelTooltip:"Manually specify advanced parameters, otherwise will use preset defaults",showWhen:e=>e.getSimpleRotation().rotationType==I.SingleTarget}),i({fieldName:"minRoarOffset",label:"Roar Offset",labelTooltip:"Minimum offset gained between current Rip and new Roar to allow a Roar clip",showWhen:X}),i({fieldName:"ripLeeway",label:"Rip Leeway",labelTooltip:"Minimum tolerated gap between current Rip and current Roar expiration times before kicking in emergency measures",showWhen:X}),a({fieldName:"useBite",label:"Bite during rotation",labelTooltip:"Use Bite during rotation rather than just for Rip maintenance during Execute",showWhen:X}),i({fieldName:"biteTime",label:"Bite Time",labelTooltip:"Minimum seconds remaining before Rip or Roar should ideally be refreshed (including planned early clips) to allow a Bite",showWhen:e=>X(e)&&e.getSimpleRotation().useBite}),i({fieldName:"berserkBiteTime",label:"Bite Time during Berserk",labelTooltip:"More aggressive threshold when Berserk is active",showWhen:e=>X(e)&&e.getSimpleRotation().useBite})]},Z={items:[{id:87070,gems:[76884,76692],reforging:154},{id:87045,reforging:154},{id:87033,enchant:4804,gems:[76692],reforging:158},{id:87044,enchant:4421,reforging:154},{id:87058,enchant:4419,gems:[76692,76670],reforging:154},{id:89935,enchant:4416,gems:[0],reforging:139},{id:85828,enchant:4433,gems:[76680,0],reforging:144,tinker:4898},{id:87022,gems:[76670,76680,76692],reforging:154,tinker:4223},{id:87013,enchant:4822,gems:[76692,76680],reforging:161},{id:90442,enchant:4428,reforging:154},{id:89932,reforging:144},{id:90437,reforging:154},{id:79328},{id:87057},{id:87046,enchant:4444,reforging:152},{}]},ee={items:[{id:87070,gems:[76884,76692],reforging:154},{id:86953,reforging:146},{id:89926,enchant:4804,gems:[76692],reforging:154},{id:86963,enchant:4421,reforging:144},{id:86923,enchant:4419,gems:[76670,76670],reforging:144},{id:86954,enchant:4416,gems:[0],reforging:154},{id:86924,enchant:4433,gems:[0],reforging:147,tinker:4898},{id:87022,gems:[76670,76680,76692],reforging:154,tinker:4223},{id:87013,enchant:4822,gems:[76692,76680],reforging:147},{id:86984,enchant:4428,gems:[76670],reforging:158},{id:89932,reforging:146},{id:86974},{id:79328},{id:87057},{id:87046,enchant:4444,reforging:151},{}]},te={items:[{id:86925,gems:[76884,76680],reforging:158},{id:86953},{id:86927,enchant:4804,gems:[76680],reforging:154},{id:86963,enchant:4421},{id:86923,enchant:4419,gems:[76670,76670]},{id:86954,enchant:4416,gems:[0],reforging:154},{id:86924,enchant:4433,gems:[0],reforging:140,tinker:4898},{id:87180,gems:[76692,76692],reforging:140,tinker:4223},{id:90504,enchant:4822,gems:[76692,76680]},{id:86984,enchant:4428,gems:[76670],reforging:159},{id:90503,reforging:154},{id:86974},{id:87167},{id:87057},{id:87156,enchant:4444,gems:[89873],reforging:159},{}]},ae={items:[{id:46161,enchant:3817,gems:[41398,40002]},{id:45517,gems:[40002]},{id:45245,enchant:3808,gems:[40002,40002]},{id:46032,enchant:3605,gems:[40002,40058]},{id:45473,enchant:3832,gems:[40002,40002,40002]},{id:45869,enchant:3845,gems:[40037]},{id:46158,enchant:3604,gems:[40002]},{id:46095,gems:[40002,40002,40002]},{id:45536,enchant:3823,gems:[39996,39996,39996]},{id:45564,enchant:4223,gems:[39996,39996]},{id:46048,gems:[45862]},{id:45608,gems:[39996]},{id:45931},{id:46038},{id:45613,enchant:3789,gems:[40037,42702]},{},{id:40713}]},ie={items:[{id:71488,enchant:4209,gems:[68778,52212],reforging:147},{id:71610,reforging:151},{id:71490,enchant:4204,gems:[52212],reforging:146},{id:71415,enchant:1099,gems:[52212,52212]},{id:71486,enchant:4102,gems:[52212,52212],reforging:147},{id:71428,randomSuffix:-133,enchant:4258,gems:[0],reforging:140},{id:71440,enchant:4107,gems:[52212,0],reforging:144},{id:71641,gems:[52212,52212],reforging:147},{id:71489,enchant:4126,gems:[52212,52212],reforging:139},{id:71467,enchant:4076,gems:[52212],reforging:144},{id:71216,gems:[52212],reforging:151},{id:71401,reforging:153},{id:69150},{id:69112},{id:71466,enchant:4227,reforging:146},{},{id:71567,gems:[52212]}]},ne={items:[{id:78694,enchant:4209,gems:[68778,71879],reforging:154},{id:71610,reforging:151},{id:78368,enchant:4204,gems:[71879,71879],reforging:151},{id:71415,enchant:1099,gems:[71879,71879],reforging:137},{id:78665,enchant:4102,gems:[71879,71879,71852]},{id:78446,enchant:4258,gems:[71879,0],reforging:154},{id:78684,enchant:4107,gems:[71879,0],reforging:161},{id:78388,gems:[71879,71879,71879],reforging:161},{id:78713,enchant:4126,gems:[71879,71879,71862],reforging:161},{id:78462,enchant:4076,gems:[71879,71879],reforging:161},{id:78489,gems:[71879],reforging:158},{id:78413,gems:[71879],reforging:154},{id:77994},{id:77999},{id:78473,enchant:4227},{},{id:77080,gems:[71879],reforging:161}]},se={items:[{},{},{},{},{},{},{},{},{},{},{},{},{id:77969},{id:72898},{},{},{}]},re={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:5185}}},doAtValue:{const:{val:"-5.2s"}}},{action:{castSpell:{spellId:{spellId:768}}},doAtValue:{const:{val:"-2.6s"}}},{action:{castSpell:{spellId:{spellId:52610}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{condition:{or:{vals:[{auraIsActive:{auraId:{spellId:5217}}},{cmp:{op:"OpLt",lhs:{remainingTime:{}},rhs:{const:{val:"16s"}}}}]}},castAllStatBuffCooldowns:{statType1:1,statType2:-1,statType3:-1}}},{action:{condition:{or:{vals:[{auraIsActive:{auraId:{spellId:5217}}},{cmp:{op:"OpLt",lhs:{remainingTime:{}},rhs:{const:{val:"11s"}}}}]}},castSpell:{spellId:{spellId:126734}}}},{action:{condition:{or:{vals:[{auraIsActive:{auraId:{spellId:5217}}},{cmp:{op:"OpLt",lhs:{remainingTime:{}},rhs:{const:{val:"16s"}}}}]}},castAllStatBuffCooldowns:{statType1:7,statType2:-1,statType3:-1}}},{action:{condition:{or:{vals:[{anyStatBuffCooldownsActive:{statType1:1,statType2:-1,statType3:-1}},{and:{vals:[{cmp:{op:"OpEq",lhs:{numStatBuffCooldowns:{statType1:1,statType2:-1,statType3:-1}},rhs:{const:{val:"0"}}}},{anyTrinketStatProcsActive:{statType1:1,statType2:-1,statType3:-1,minIcdSeconds:30}}]}},{cmp:{op:"OpLt",lhs:{remainingTime:{}},rhs:{const:{val:"16s"}}}}]}},castSpell:{spellId:{spellId:106737}}}},{action:{condition:{or:{vals:[{and:{vals:[{auraIsActive:{auraId:{spellId:5217}}},{cmp:{op:"OpLt",lhs:{remainingTime:{}},rhs:{math:{op:"OpAdd",lhs:{spellTimeToReady:{spellId:{spellId:106952}}},rhs:{const:{val:"26s"}}}}}}]}},{cmp:{op:"OpLt",lhs:{remainingTime:{}},rhs:{const:{val:"26s"}}}},{auraIsActive:{auraId:{spellId:106951}}}]}},castSpell:{spellId:{itemId:76089}}}},{action:{condition:{auraIsActive:{auraId:{spellId:106951}}},castSpell:{spellId:{spellId:26297}}}},{action:{autocastOtherCooldowns:{}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:106952}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:132158}}}},{action:{catOptimalRotationAction:{bearWeave:!0,snekWeave:!0,useNs:!0,wrathWeave:!0}}}]},oe=n("Pre-MSV BiS",{items:[{id:77534,gems:[76884,77547,77543]},{id:90583,reforging:153},{id:89341,enchant:4804,gems:[76670],reforging:147},{id:90586,enchant:4421,reforging:147},{id:85823,enchant:4419,gems:[76670,76670],reforging:144},{id:88884,enchant:4411,gems:[0],reforging:147},{id:85824,enchant:4433,gems:[76692,0],reforging:144,tinker:4898},{id:84947,gems:[76680,76692],reforging:144,tinker:4223},{id:84871,enchant:4822,gems:[76692,76692],reforging:154},{id:81688,enchant:4428,gems:[76670],reforging:146},{id:90584,reforging:154},{id:81191,reforging:146},{id:79328},{id:81267,reforging:147},{id:81108,enchant:4441},{}]}),le=n("Pre-HoF BiS",Z),ge=n("Pre-ToES BiS",ee),de=n("P1",te),ce=n("P2",ae),pe=n("P3",ie),me=n("P4",ne);s("P4",se);const fe=r("APL List View",re),he=o("DoC Bear-Weave",A.fromMap({[H.StatStrength]:.4,[H.StatAgility]:1,[H.StatAttackPower]:.38,[H.StatHitRating]:.33,[H.StatExpertiseRating]:.33,[H.StatCritRating]:.32,[H.StatHasteRating]:.22,[H.StatMasteryRating]:.36},{[x.PseudoStatMainHandDps]:.81})),ue=o("HotW Mono-Cat",A.fromMap({[H.StatStrength]:.38,[H.StatAgility]:1,[H.StatAttackPower]:.36,[H.StatHitRating]:.28,[H.StatExpertiseRating]:.28,[H.StatCritRating]:.3,[H.StatHasteRating]:.23,[H.StatMasteryRating]:.35},{[x.PseudoStatMainHandDps]:.76})),Se=b.create({rotationType:I.SingleTarget,bearWeave:!0,snekWeave:!0,useNs:!0,allowAoeBerserk:!1,manualParams:!1,minRoarOffset:40,ripLeeway:4,useBite:!0,biteTime:11,berserkBiteTime:7,hotwStrategy:v.Wrath}),Te=l("Single Target Default",D.SpecFeralDruid,Se),ye={name:"Default",data:k.create({talentsString:"000302",glyphs:F.create({major1:40923,major2:40914})})},Ie=R.create({assumeBleedActive:!0}),ve=J.create({flaskId:76084,foodId:74648,potId:76089,prepotId:76089}),we={distanceFromTarget:24,highHpThreshold:.8,iterationCount:25e3,profession1:j.Engineering,profession2:j.ProfessionUnknown,race:$.RaceWorgen},Ae=g(D.SpecFeralDruid,{cssClass:"feral-druid-sim-ui",cssScheme:W.getCssClass(W.Druid),requiredTalentRows:[3,5],knownIssues:[],warnings:[],epStats:[H.StatStrength,H.StatAgility,H.StatAttackPower,H.StatHitRating,H.StatExpertiseRating,H.StatCritRating,H.StatHasteRating,H.StatMasteryRating],epPseudoStats:[x.PseudoStatMainHandDps],epReferenceStat:H.StatAgility,displayStats:P.createDisplayStatArray([H.StatHealth,H.StatStrength,H.StatAgility,H.StatAttackPower,H.StatExpertiseRating,H.StatMasteryRating,H.StatMana],[x.PseudoStatPhysicalHitPercent,x.PseudoStatPhysicalCritPercent,x.PseudoStatMeleeHastePercent]),defaults:{gear:oe.gear,epWeights:he.epWeights,statCaps:(()=>{const e=(new A).withPseudoStat(x.PseudoStatPhysicalHitPercent,7.5),t=(new A).withStat(H.StatExpertiseRating,30*N);return e.add(t)})(),other:we,consumables:ve,rotationType:B.TypeSimple,simpleRotation:Se,talents:ye.data,specOptions:Ie,raidBuffs:q.create({...M(),markOfTheWild:!0,trueshotAura:!0,unholyAura:!0,graceOfAir:!0,bloodlust:!0,arcaneBrilliance:!0,moonkinAura:!0}),partyBuffs:_.create({}),individualBuffs:G.create({}),debuffs:V.create({weakenedArmor:!0,physicalVulnerability:!0,lightningBreath:!0})},playerIconInputs:[],rotationInputs:Y,includeBuffDebuffInputs:[f,h,u],excludeBuffDebuffInputs:[],otherInputs:{inputs:[K,d,c,p,m,Q]},itemSwapSlots:[U.ItemSlotMainHand,U.ItemSlotTrinket1,U.ItemSlotTrinket2],encounterPicker:{showExecuteProportion:!0},presets:{epWeights:[he,ue],talents:[ye],rotations:[Te,fe],gear:[oe,le,ge,de],itemSwaps:[],builds:[]},autoRotation:e=>fe.rotation.rotation,simpleRotation:(e,t,a)=>{const[i,n]=S(a),s=O.fromJsonString('{"condition":{"or":{"vals":[{"auraIsActive":{"auraId":{"spellId":5217}}},{"cmp":{"op":"OpLt","lhs":{"remainingTime":{}},"rhs":{"const":{"val":"16s"}}}}]}},"castAllStatBuffCooldowns":{"statType1":1,"statType2":-1,"statType3":-1}}'),r=O.fromJsonString('{"condition":{"or":{"vals":[{"auraIsActive":{"auraId":{"spellId":5217}}},{"cmp":{"op":"OpLt","lhs":{"remainingTime":{}},"rhs":{"const":{"val":"11s"}}}}]}},"castSpell":{"spellId":{"spellId":126734}}}'),o=O.fromJsonString('{"condition":{"or":{"vals":[{"auraIsActive":{"auraId":{"spellId":5217}}},{"cmp":{"op":"OpLt","lhs":{"remainingTime":{}},"rhs":{"const":{"val":"16s"}}}}]}},"castAllStatBuffCooldowns":{"statType1":7,"statType2":-1,"statType3":-1}}'),l=O.fromJsonString('{"condition":{"or":{"vals":[{"anyStatBuffCooldownsActive":{"statType1":1,"statType2":-1,"statType3":-1}},{"and":{"vals":[{"cmp":{"op":"OpEq","lhs":{"numStatBuffCooldowns":{"statType1":1,"statType2":-1,"statType3":-1}},"rhs":{"const":{"val":"0"}}}},{"anyTrinketStatProcsActive":{"statType1":1,"statType2":-1,"statType3":-1,"minIcdSeconds":30}}]}},{"cmp":{"op":"OpLt","lhs":{"remainingTime":{}},"rhs":{"const":{"val":"16s"}}}}]}},"castSpell":{"spellId":{"spellId":106737}}}'),g=O.fromJsonString('{"condition":{"or":{"vals":[{"and":{"vals":[{"auraIsActive":{"auraId":{"spellId":5217}}},{"cmp":{"op":"OpLt","lhs":{"remainingTime":{}},"rhs":{"math":{"op":"OpAdd","lhs":{"spellTimeToReady":{"spellId":{"spellId":106952}}},"rhs":{"const":{"val":"26s"}}}}}}]}},{"cmp":{"op":"OpLt","lhs":{"remainingTime":{}},"rhs":{"const":{"val":"26s"}}}},{"auraIsActive":{"auraId":{"spellId":106951}}}]}},"castSpell":{"spellId":{"itemId":76089}}}'),d=O.fromJsonString('{"condition":{"auraIsActive":{"auraId":{"spellId":106951}}},"castSpell":{"spellId":{"spellId":26297}}}'),c=O.fromJsonString('{"condition":{"const":{"val":"false"}},"castSpell":{"spellId":{"spellId":106952}}}'),p=O.fromJsonString('{"condition":{"const":{"val":"false"}},"castSpell":{"spellId":{"spellId":132158}}}'),m=O.fromJsonString('{"condition":{"const":{"val":"false"}},"castSpell":{"spellId":{"spellId":108292}}}'),f=e.getTalents().heartOfTheWild&&t.hotwStrategy!=v.PassivesOnly,h=f&&t.hotwStrategy==v.Wrath,u=O.fromJsonString(`{"catOptimalRotationAction":{"rotationType":${t.rotationType},"manualParams":${t.manualParams},"allowAoeBerserk":${t.allowAoeBerserk},"bearWeave":${t.bearWeave},"snekWeave":${t.snekWeave},"useNs":${t.useNs},"wrathWeave":${h},"minRoarOffset":${t.minRoarOffset.toFixed(2)},"ripLeeway":${t.ripLeeway.toFixed(2)},"useBite":${t.useBite},"biteTime":${t.biteTime.toFixed(2)},"berserkBiteTime":${t.berserkBiteTime.toFixed(2)}}}`),T=t.rotationType==I.SingleTarget;n.push(...[T?s:null,T?r:null,T?o:null,T?l:null,T?g:null,T?d:null,c,p,f?null:m,u].filter(e=>e));const y=C.fromJsonString('{"action":{"castSpell":{"spellId":{"spellId":5185}}},"doAtValue":{"const":{"val":"-5.2s"}}}'),w=C.fromJsonString('{"action":{"castSpell":{"spellId":{"spellId":768}}},"doAtValue":{"const":{"val":"-2.6s"}}}'),A=C.fromJsonString('{"action":{"castSpell":{"spellId":{"spellId":52610}}},"doAtValue":{"const":{"val":"-1s"}}}');return i.push(...[e.getTalents().dreamOfCenarius?y:null,e.getTalents().dreamOfCenarius?w:null,e.getMajorGlyphs().includes(40923)?A:null].filter(e=>e)),E.create({prepullActions:i,priorityList:n.map(e=>L.create({action:e}))})},hiddenMCDs:[126734,106737,76089,26297,106952,132158,108292,55004],raidSimPresets:[{spec:D.SpecFeralDruid,talents:ye.data,specOptions:Ie,consumables:ve,defaultFactionRaces:{[z.Unknown]:$.RaceUnknown,[z.Alliance]:$.RaceNightElf,[z.Horde]:$.RaceTauren},defaultGear:{[z.Unknown]:{},[z.Alliance]:{1:de.gear,2:ce.gear,3:pe.gear,4:me.gear},[z.Horde]:{1:de.gear,2:ce.gear,3:pe.gear,4:me.gear}},otherDefaults:we}]});class be extends T{constructor(e,t){super(e,t,Ae),t.sim.waitForInit().then(()=>{new y(this)})}}export{be as F};
