import{g as t,e,f as s,S as i,d as a,t as o,h as n,r,k as l,ae as u,B as p,P as c,x as h}from"./localization-kgGUpfrJ.chunk.js";import{fe as f,U as m,F as g,T as d,k as S,Q as C,eM as b,ff as y,fg as w,V as v,bx as E,aZ as P,aV as k,f7 as G,f8 as M,e$ as I,fh as T,aa as x,fi as R,a_ as N,bj as V}from"./detailed_results-BEc8O_jh.chunk.js";import{b as z,ad as B,ae as A,af as O,ag as U}from"./preset_utils-Cz_ySDGC.chunk.js";const D=t=>({max:t}),L=t=>({min:t}),F=(t,e,s)=>t.matrix[Math.imul(e,t.width)+s],H=(t,e,s,i)=>{t.matrix[Math.imul(e,t.width)+s]=i},W=t=>"function"==typeof t[Symbol.iterator]?t:Object.entries(t),q=(t,e)=>{const s=Math.round(1/e);return Math.round((t+Number.EPSILON)*s)/s},_=(t,e,s)=>{const i=F(t,e,s),a=t.variableAtPosition[t.width+e],o=t.variableAtPosition[s];t.variableAtPosition[t.width+e]=o,t.variableAtPosition[s]=a,t.positionOfVariable[a]=s,t.positionOfVariable[o]=t.width+e;const n=[];for(let r=0;r<t.width;r++){const s=F(t,e,r);Math.abs(s)>1e-16?(H(t,e,r,s/i),n.push(r)):H(t,e,r,0)}H(t,e,s,1/i);for(let r=0;r<t.height;r++){if(r===e)continue;const a=F(t,r,s);if(Math.abs(a)>1e-16){for(let s=0;s<n.length;s++){const i=n[s];H(t,r,i,F(t,r,i)-a*F(t,e,i))}H(t,r,s,-a/i)}}},$=(t,e,s,i)=>{t.push([e.variableAtPosition[e.width+s],e.variableAtPosition[i]]);for(let a=6;a<=Math.trunc(t.length/2);a++){let e=!0;for(let s=0;s<a;s++){const i=t.length-1-s,[o,n]=t[i],[r,l]=t[i-a];if(o!==r||n!==l){e=!1;break}}if(e)return!0}return!1},J=(t,e)=>{const s=[],{precision:i,maxPivots:a,checkCycles:o}=e;for(let n=0;n<a;n++){let e=0,a=i;for(let s=1;s<t.width;s++){const i=F(t,0,s);i>a&&(a=i,e=s)}if(0===e)return["optimal",q(F(t,0,0),i)];let n=0,r=1/0;for(let s=1;s<t.height;s++){const a=F(t,s,e);if(a<=i)continue;const o=F(t,s,0)/a;if(o<r&&(n=s,r=o,o<=i))break}if(0===n)return["unbounded",e];if(o&&$(s,t,n,e))return["cycled",NaN];_(t,n,e)}return["cycled",NaN]},j=(t,e)=>{const s=[],{precision:i,maxPivots:a,checkCycles:o}=e;for(let n=0;n<a;n++){let a=0,n=-i;for(let e=1;e<t.height;e++){const s=F(t,e,0);s<n&&(n=s,a=e)}if(0===a)return J(t,e);let r=0,l=-1/0;for(let e=1;e<t.width;e++){const s=F(t,a,e);if(s<-i){const i=-F(t,0,e)/s;i>l&&(l=i,r=e)}}if(0===r)return["infeasible",NaN];if(o&&$(s,t,a,r))return["cycled",NaN];_(t,a,r)}return["cycled",NaN]};var Y,K,Z,Q={exports:{}},X=Q.exports;function tt(){return Y||(Y=1,t=Q,function(){var e,s,i,a,o,n,r,l,u,p,c,h,f,m,g;i=Math.floor,p=Math.min,s=function(t,e){return t<e?-1:t>e?1:0},u=function(t,e,a,o,n){var r;if(null==a&&(a=0),null==n&&(n=s),a<0)throw new Error("lo must be non-negative");for(null==o&&(o=t.length);a<o;)n(e,t[r=i((a+o)/2)])<0?o=r:a=r+1;return[].splice.apply(t,[a,a-a].concat(e)),e},n=function(t,e,i){return null==i&&(i=s),t.push(e),m(t,0,t.length-1,i)},o=function(t,e){var i,a;return null==e&&(e=s),i=t.pop(),t.length?(a=t[0],t[0]=i,g(t,0,e)):a=i,a},l=function(t,e,i){var a;return null==i&&(i=s),a=t[0],t[0]=e,g(t,0,i),a},r=function(t,e,i){var a;return null==i&&(i=s),t.length&&i(t[0],e)<0&&(e=(a=[t[0],e])[0],t[0]=a[1],g(t,0,i)),e},a=function(t,e){var a,o,n,r,l,u;for(null==e&&(e=s),l=[],o=0,n=(r=function(){u=[];for(var e=0,s=i(t.length/2);0<=s?e<s:e>s;0<=s?e++:e--)u.push(e);return u}.apply(this).reverse()).length;o<n;o++)a=r[o],l.push(g(t,a,e));return l},f=function(t,e,i){var a;if(null==i&&(i=s),-1!==(a=t.indexOf(e)))return m(t,0,a,i),g(t,a,i)},c=function(t,e,i){var o,n,l,u,p;if(null==i&&(i=s),!(n=t.slice(0,e)).length)return n;for(a(n,i),l=0,u=(p=t.slice(e)).length;l<u;l++)o=p[l],r(n,o,i);return n.sort(i).reverse()},h=function(t,e,i){var n,r,l,c,h,f,m,g,d;if(null==i&&(i=s),10*e<=t.length){if(!(l=t.slice(0,e).sort(i)).length)return l;for(r=l[l.length-1],c=0,f=(m=t.slice(e)).length;c<f;c++)i(n=m[c],r)<0&&(u(l,n,0,null,i),l.pop(),r=l[l.length-1]);return l}for(a(t,i),d=[],h=0,g=p(e,t.length);0<=g?h<g:h>g;0<=g?++h:--h)d.push(o(t,i));return d},m=function(t,e,i,a){var o,n,r;for(null==a&&(a=s),o=t[i];i>e&&a(o,n=t[r=i-1>>1])<0;)t[i]=n,i=r;return t[i]=o},g=function(t,e,i){var a,o,n,r,l;for(null==i&&(i=s),o=t.length,l=e,n=t[e],a=2*e+1;a<o;)(r=a+1)<o&&!(i(t[a],t[r])<0)&&(a=r),t[e]=t[a],a=2*(e=a)+1;return t[e]=n,m(t,l,e,i)},e=function(){function t(t){this.cmp=null!=t?t:s,this.nodes=[]}return t.push=n,t.pop=o,t.replace=l,t.pushpop=r,t.heapify=a,t.updateItem=f,t.nlargest=c,t.nsmallest=h,t.prototype.push=function(t){return n(this.nodes,t,this.cmp)},t.prototype.pop=function(){return o(this.nodes,this.cmp)},t.prototype.peek=function(){return this.nodes[0]},t.prototype.contains=function(t){return-1!==this.nodes.indexOf(t)},t.prototype.replace=function(t){return l(this.nodes,t,this.cmp)},t.prototype.pushpop=function(t){return r(this.nodes,t,this.cmp)},t.prototype.heapify=function(){return a(this.nodes,this.cmp)},t.prototype.updateItem=function(t){return f(this.nodes,t,this.cmp)},t.prototype.clear=function(){return this.nodes=[]},t.prototype.empty=function(){return 0===this.nodes.length},t.prototype.size=function(){return this.nodes.length},t.prototype.clone=function(){var e;return(e=new t).nodes=this.nodes.slice(0),e},t.prototype.toArray=function(){return this.nodes.slice(0)},t.prototype.insert=t.prototype.push,t.prototype.top=t.prototype.peek,t.prototype.front=t.prototype.peek,t.prototype.has=t.prototype.contains,t.prototype.copy=t.prototype.clone,t}(),t.exports=e}.call(X)),Q.exports;var t}const et=f(Z?K:(Z=1,K=tt())),st=(t,e)=>({matrix:new Float64Array(t),positionOfVariable:new Int32Array(e),variableAtPosition:new Int32Array(e)}),it=(t,{matrix:e,positionOfVariable:s,variableAtPosition:i},a)=>{const{width:o,height:n}=t;e.set(t.matrix);for(let l=0;l<a.length;l++){const[s,i,r]=a[l],u=(n+l)*o,p=t.positionOfVariable[i];if(p<o)e[u]=s*r,e.fill(0,u+1,u+o),e[u+p]=s;else{const t=(p-o)*o;e[u]=s*(r-e[t]);for(let i=1;i<o;i++)e[u+i]=-s*e[t+i]}}s.set(t.positionOfVariable),i.set(t.variableAtPosition);const r=o+n+a.length;for(let l=o+n;l<r;l++)s[l]=l,i[l]=l;return{matrix:e.subarray(0,t.matrix.length+o*a.length),width:o,height:n+a.length,positionOfVariable:s.subarray(0,r),variableAtPosition:i.subarray(0,r)}},at=(t,e)=>{let s=0,i=0,a=0;for(let o=0;o<e.length;o++){const n=e[o],r=t.positionOfVariable[n]-t.width;if(r<0)continue;const l=F(t,r,0),u=Math.abs(l-Math.round(l));u>s&&(s=u,i=n,a=l)}return[i,a,s]},ot=({tableau:t,sign:e,variables:s},i,a,{precision:o,includeZeroVariables:n})=>{if("optimal"===i||"timedout"===i&&!Number.isNaN(a)){const r=[];for(let e=0;e<s.length;e++){const[i]=s[e],a=t.positionOfVariable[e+1]-t.width,l=a>=0?F(t,a,0):0;l>o?r.push([i,q(l,o)]):n&&r.push([i,0])}return{status:i,result:-e*a,variables:r}}if("unbounded"===i){const i=t.variableAtPosition[a]-1;return{status:"unbounded",result:e*(1/0),variables:0<=i&&i<s.length?[[s[i][0],1/0]]:[]}}return{status:i,result:NaN,variables:[]}},nt={precision:1e-8,checkCycles:!1,maxPivots:8192,tolerance:0,timeout:1/0,maxIterations:32768,includeZeroVariables:!1},rt=(t,e)=>{const s=(t=>{const{objective:e}=t,s=W(t.constraints),i=W(t.variables),a=Array.isArray(i)?i:Array.from(i),o=[],n=[];for(let d=1;d<=a.length;d++){const[t]=a[d-1];o.push(d),n.push(d)}const r=new Map;for(const[d,S]of s){const t=r.get(d)??{row:NaN,lower:-1/0,upper:1/0};t.lower=Math.max(t.lower,S.equal??S.min??-1/0),t.upper=Math.min(t.upper,S.equal??S.max??1/0),r.has(d)||r.set(d,t)}let l=1;for(const d of r.values())d.row=l,l+=(Number.isFinite(d.lower)?1:0)+(Number.isFinite(d.upper)?1:0);const u=a.length+1,p=l+o.length,c=u+p,h=new Float64Array(u*p),f=new Int32Array(c),m=new Int32Array(c),g={matrix:h,width:u,height:p,positionOfVariable:f,variableAtPosition:m};for(let d=0;d<c;d++)f[d]=d,m[d]=d;for(let d=1;d<u;d++)for(const[t,s]of W(a[d-1][1])){t===e&&H(g,0,d,1*s);const i=r.get(t);null!=i&&(Number.isFinite(i.upper)?(H(g,i.row,d,s),Number.isFinite(i.lower)&&H(g,i.row+1,d,-s)):Number.isFinite(i.lower)&&H(g,i.row,d,-s))}for(const d of r.values())Number.isFinite(d.upper)?(H(g,d.row,0,d.upper),Number.isFinite(d.lower)&&H(g,d.row+1,0,-d.lower)):Number.isFinite(d.lower)&&H(g,d.row,0,-d.lower);for(let d=0;d<o.length;d++){const t=l+d;H(g,t,0,1),H(g,t,o[d],1)}return{tableau:g,sign:1,variables:a,integers:n}})(t),i={...nt,...e},[a,o]=j(s.tableau,i);if(0===s.integers.length||"optimal"!==a)return ot(s,a,o,i);{const[t,e,a]=((t,e,s)=>{const{tableau:i,sign:a,integers:o}=t,{precision:n,maxIterations:r,tolerance:l,timeout:u}=s,[p,c,h]=at(i,o);if(h<=n)return[t,"optimal",e];const f=new et((t,e)=>t[0]-e[0]);f.push([e,[[-1,p,Math.ceil(c)]]]),f.push([e,[[1,p,Math.floor(c)]]]);const m=2*o.length,g=i.matrix.length+m*i.width,d=i.positionOfVariable.length+m;let S=st(g,d),C=st(g,d);const b=e*(1-a*l),y=u+Date.now();let w=Date.now()>=y,v=!1,E=1/0,P=i,k=0;for(;k<r&&!f.empty()&&E>=b&&!w;){const[t,e]=f.pop();if(t>E)break;const a=it(i,S,e),[r,l]=j(a,s);if("optimal"===r&&l<E){const[t,s,i]=at(a,o);if(i<=n){v=!0,E=l,P=a;const t=C;C=S,S=t}else{const i=[],a=[];for(let s=0;s<e.length;s++){const o=e[s],[n,r]=o;r===t?n<0?a.push(o):i.push(o):(i.push(o),a.push(o))}a.push([1,t,Math.floor(s)]),i.push([-1,t,Math.ceil(s)]),f.push([l,i]),f.push([l,a])}}w=Date.now()>=y,k++}const G=(w||k>=r)&&!f.empty()&&E>=b?"timedout":v?"optimal":"infeasible";return[{...t,tableau:P},G,v?E:NaN]})(s,o,i);return ot(t,e,a,i)}},lt=[t.StatHitRating,t.StatCritRating,t.StatHasteRating,t.StatExpertiseRating,t.StatMasteryRating,t.StatDodgeRating,t.StatParryRating],ut={[t.StatMasteryRating]:()=>e(s,null,"Total ",e("strong",null,"percentage")),[t.StatHasteRating]:()=>e(s,null,"Final percentage value ",e("strong",null,"including")," all buffs/gear.")},pt=class t{static canEnable(t){return t.getGear().hasTrinketFromOptions([69150,68994,69113,68972])}constructor(e,s){if(!t.relevantStats.includes(e))throw new Error("Forced highest stat must be either Crit, Haste, or Mastery!");this.forcedHighestStat=m.fromStat(e),this.constrainedStats=t.relevantStats.filter(t=>t!==e).map(t=>m.fromStat(t)),this.constraintKeys=this.constrainedStats.map(t=>this.forcedHighestStat.getShortName(s)+"Minus"+t.getShortName(s))}updateCoefficients(e,s,i){if(t.relevantStats.includes(s))for(const[t,a]of this.constrainedStats.entries()){const o=this.constraintKeys[t],n=e.get(o)||0;this.forcedHighestStat.equalsStat(s)?e.set(o,n+i):a.equalsStat(s)&&e.set(o,n-i)}}updateConstraints(e,s,i){for(const[a,o]of this.constrainedStats.entries()){const n=(new g).withUnitStat(this.forcedHighestStat,1).withUnitStat(o,-1);let r=1-i.computeEP(n);const l=t.procTrinketOffsets.get(o.getStat());for(const t of s.getTrinkets()){if(!t)continue;const e=t.item.id;if(l.has(e)){r+=l.get(e);break}}e.set(this.constraintKeys[a],L(r))}}};pt.relevantStats=[t.StatCritRating,t.StatHasteRating,t.StatMasteryRating],pt.procTrinketOffsets=new Map([[t.StatCritRating,new Map([[69167,460],[68995,410]])],[t.StatHasteRating,new Map([[69112,1730],[68927,1532]])],[t.StatMasteryRating,new Map([])]]);let ct=pt;class ht{constructor(t,n){this.statTooltips={},this.additionalSoftCapTooltipInformation={},this.includeGemsChangeEmitter=new d,this.includeGems=!1,this.includeEOTBPGemSocketChangeEmitter=new d,this.includeEOTBPGemSocket=!1,this.freezeItemSlotsChangeEmitter=new d,this.freezeItemSlots=!1,this.frozenItemSlots=new Map,this.previousGear=null,this.previousReforges=new Map,this.currentReforges=new Map,this.relativeStatCap=null,this.simUI=t,this.player=t.player,this.playerClass=this.player.getClass(),this.isExperimental=n?.experimental,this.isHybridCaster=[i.SpecBalanceDruid,i.SpecShadowPriest,i.SpecElementalShaman,i.SpecMistweaverMonk].includes(this.player.getSpec()),this.isTankSpec=this.player.getPlayerSpec().isTankSpec,this.sim=t.sim,this.defaults=t.individualConfig.defaults,this.getEPDefaults=n?.getEPDefaults,this.updateSoftCaps=n?.updateSoftCaps,this.updateGearStatsModifier=n?.updateGearStatsModifier,this._softCapsConfig=this.defaults.softCapBreakpoints||[],this.statTooltips={...ut,...n?.statTooltips},this.additionalSoftCapTooltipInformation={...n?.additionalSoftCapTooltipInformation},this.statSelectionPresets=n?.statSelectionPresets,this._statCaps=this.statCaps,this.enableBreakpointLimits=!!n?.enableBreakpointLimits;const r={label:a.t("sidebar.buttons.suggest_reforges"),cssClass:"suggest-reforges-action-button flex-grow-1",onClick:async({currentTarget:e})=>{const s=e;s&&(s.classList.add("loading"),s.disabled=!0);const i=t.player.getChallengeModeEnabled();try{performance.mark("reforge-optimization-start"),i&&t.player.setChallengeModeEnabled(d.nextEventID(),!1),await this.optimizeReforges(),this.onReforgeDone()}catch(a){this.onReforgeError(a)}finally{i&&t.player.setChallengeModeEnabled(d.nextEventID(),!0),performance.mark("reforge-optimization-end"),s&&(s.classList.remove("loading"),s.disabled=!1)}}},l={cssClass:"suggest-reforges-button-settings",children:e(s,null,e("i",{className:"fas fa-cog"}))},{group:u,children:[p,c]}=t.addActionGroup([r,l],{cssClass:S("suggest-reforges-settings-group d-flex",this.isExperimental&&!this.player.sim.getShowExperimental()&&"hide")});this.bindToggleExperimental(u),this.softCapsConfig?.length&&o(p,{theme:"suggest-reforges-softcaps",placement:"bottom",maxWidth:310,interactive:!0,onShow:t=>t.setContent(this.buildReforgeButtonTooltip())}),o(c,{placement:"bottom",content:"Change Reforge Optimizer settings"}),this.buildContextMenu(c)}bindToggleExperimental(t){const e=()=>t.classList[this.isExperimental&&!this.player.sim.getShowExperimental()?"add":"remove"]("hide");e(),this.player.sim.showExperimentalChangeEmitter.on(()=>{e()})}get softCapsConfig(){return this.updateSoftCaps?.(C.cloneSoftCaps(this._softCapsConfig))||this._softCapsConfig}get softCapsConfigWithLimits(){if(!this.enableBreakpointLimits)return this.softCapsConfig;const t=C.cloneSoftCaps(this.softCapsConfig);for(const[e,s]of this.player.getBreakpointLimits().asUnitStatArray()){if(!s)continue;const i=t.find(t=>t.unitStat.equals(e));i&&(i.breakpoints=i.breakpoints.filter(t=>t<=s))}return t}get statCaps(){return this.sim.getUseCustomEPValues()?this.player.getStatCaps():this.defaults.statCaps||new g}setStatCap(t,e){return this._statCaps=this._statCaps.withUnitStat(t,e),this.sim.getUseCustomEPValues()&&this.player.setStatCaps(d.nextEventID(),this._statCaps),this.statCaps}setDefaultStatCaps(){return this._statCaps=this.defaults.statCaps||new g,this.player.setStatCaps(d.nextEventID(),this._statCaps),this.statCaps}get preCapEPs(){let e=this.sim.getUseCustomEPValues()?this.player.getEpWeights():this.getEPDefaults?.(this.player)||this.defaults.epWeights;return this.isHybridCaster&&(e=e.withStat(t.StatSpirit,.01)),e}static checkWeights(e,s,i){let a=e;for(const o of[t.StatHitRating,t.StatCritRating,t.StatHasteRating]){const t=m.getChildren(o);if(t.map(t=>e.getPseudoStat(t)).some(t=>0!==t))a=a.withStat(o,0);else for(const n of t)if(b(n,s,i)){const t=m.fromPseudoStat(n).convertPercentToRating(e.getStat(o));a=a.withPseudoStat(n,t),a=a.withStat(o,0);break}}return a}static includesCappedStat(e,s,i){for(const[a,o]of e.entries())if(a.includes("PseudoStat")){const t=n[a];if(b(t,s,i))return!0}else if(a.includes("Stat")){const e=t[a];if(y(e,s,i))return!0}return!1}buildReforgeButtonTooltip(){return e(s,null,e("p",null,"The following breakpoints have been implemented for this spec:"),e("table",{className:"w-100"},e("tbody",null,this.softCapsConfigWithLimits?.map(({unitStat:t,breakpoints:i,capType:a,postCapEPs:o},n)=>e(s,null,e("tr",null,e("th",{className:"text-nowrap",colSpan:2},t.getShortName(this.playerClass)),e("td",{className:"text-end"},w.get(a))),this.additionalSoftCapTooltipInformation[t.getRootStat()]&&e(s,null,e("tr",null,e("td",{colSpan:3},this.additionalSoftCapTooltipInformation[t.getRootStat()]?.())),e("tr",null,e("td",{colSpan:3,className:"pb-2"}))),e("tr",null,e("th",{className:"text-end"},e("em",null,"%")),e("th",{colSpan:2,className:"text-nowrap text-end"},e("em",null,"Post cap EP"))),i.map((s,i)=>e("tr",null,e("td",{className:"text-end"},this.breakpointValueToDisplayPercentage(s,t)),e("td",{colSpan:2,className:"text-end"},t.convertEpToRatingScale(a===v.TypeThreshold?o[0]:o[i]).toFixed(2)))),n!==this.softCapsConfigWithLimits.length-1&&e(s,null,e("tr",null,e("td",{colSpan:3,className:"border-bottom pb-2"})),e("tr",null,e("td",{colSpan:3,className:"pb-2"}))))))))}setIncludeGems(t,e){this.includeGems!==e&&(this.includeGems=e,this.includeGemsChangeEmitter.emit(t))}setIncludeEOTBPGemSocket(t,e){this.includeEOTBPGemSocket!==e&&(this.includeEOTBPGemSocket=e,this.includeEOTBPGemSocketChangeEmitter.emit(t))}setFreezeItemSlots(t,e){this.freezeItemSlots!==e&&(this.freezeItemSlots=e,this.frozenItemSlots.clear(),this.freezeItemSlotsChangeEmitter.emit(t))}buildContextMenu(t){const i=o(t,{interactive:!0,trigger:"click",theme:"reforge-optimiser-popover",placement:"right-start",onShow:t=>{const i=new E(null,this.player,{extraCssClasses:["mb-2"],id:"reforge-optimizer-enable-custom-ep-weights",label:"Use custom EP Weights",inline:!0,changedEvent:()=>this.sim.useCustomEPValuesChangeEmitter,getValue:()=>this.sim.getUseCustomEPValues(),setValue:(t,e,s)=>{this.sim.setUseCustomEPValues(t,s)}});let a=null;this.softCapsConfig?.length&&(a=new E(null,this.player,{extraCssClasses:["mb-2"],id:"reforge-optimizer-enable-soft-cap-breakpoints",label:"Use soft cap breakpoints",inline:!0,changedEvent:()=>this.sim.useSoftCapBreakpointsChangeEmitter,getValue:()=>this.sim.getUseSoftCapBreakpoints(),setValue:(t,e,s)=>{this.sim.setUseSoftCapBreakpoints(t,s)}}));const o=new z(null,this.player,{id:"reforge-optimizer-force-stat-proc",label:"Force Matrix/Apparatus proc",values:[{name:"Any",value:-1},...[...ct.relevantStats].map(t=>({name:m.fromStat(t).getShortName(this.playerClass),value:t}))],changedEvent:()=>this.player.gearChangeEmitter,getValue:()=>this.relativeStatCap?this.relativeStatCap.forcedHighestStat.getStat():-1,setValue:(t,e,s)=>{this.relativeStatCap=-1==s?null:new ct(s,this.playerClass)},showWhen:()=>{const t=ct.canEnable(this.player);return t||(this.relativeStatCap=null),t}}),n=new E(null,this.player,{extraCssClasses:["mb-2"],id:"reforge-optimizer-include-gems",label:"Include gems",labelTooltip:"Optimize gems and Reforges simultaneously.",inline:!0,changedEvent:()=>this.includeGemsChangeEmitter,getValue:()=>this.includeGems,setValue:(t,e,s)=>{d.freezeAllAndDo(()=>{this.setIncludeGems(t,s),this.setIncludeEOTBPGemSocket(t,this.player.sim.getPhase()>=2)})}}),l=new E(null,this.player,{extraCssClasses:["mb-2"],id:"reforge-optimizer-include-eotbp-socket",label:"Include EotBP Socket",labelTooltip:'Allows the optimiser to also include the "Eye of the Black Prince" socket in the optimization.',inline:!0,changedEvent:()=>d.onAny([this.includeGemsChangeEmitter,this.includeEOTBPGemSocketChangeEmitter,this.player.gearChangeEmitter]),getValue:()=>this.includeEOTBPGemSocket,showWhen:()=>this.includeGems&&this.player.hasEotBPItemEquipped(),setValue:(t,e,s)=>{this.setIncludeEOTBPGemSocket(t,s)}}),u=new E(null,this.player,{extraCssClasses:["mb-2"],id:"reforge-optimizer-freeze-item-slots",label:"Freeze item slots",labelTooltip:'Flag one or more item slots to be "frozen", which will prevent the optimizer from changing the Reforge or gems in that slot from their current settings. This can be useful for hybrid classes who use the same gear piece for multiple raid roles.',inline:!0,changedEvent:()=>this.freezeItemSlotsChangeEmitter,getValue:()=>this.freezeItemSlots,setValue:(t,e,s)=>{this.setFreezeItemSlots(t,s)}}),p=r();t.setContent(e(s,null,i.rootElem,e("div",{ref:p,className:S("mb-0",this.sim.getUseCustomEPValues()&&"hide")},e("p",null,"This will enable modification of the default EP weights and setting custom stat caps."),e("p",null,"Ep weights can be modified in the Stat Weights editor."),e("p",null,"If you want to hard cap a stat make sure to put the EP for that stat higher.")),this.buildCapsList({useCustomEPValuesInput:i,description:p.value}),a?.rootElem,o.rootElem,this.buildSoftCapBreakpointsLimiter({useSoftCapBreakpointsInput:a}),n.rootElem,l.rootElem,u.rootElem,this.buildFrozenSlotsInputs(),this.buildEPWeightsToggle({useCustomEPValuesInput:i})))},onHidden:()=>{i.setContent(e(s,null))}})}buildFrozenSlotsInputs(){const t=this.player.getGear().getItemSlots(),s=Math.floor(t.length/2)+1,i=[];for(let e=0;e<s;e++)i.push(t.slice(2*e,2*(e+1)));const a=r(),o=e("table",{className:"d-none mb-2",ref:a},i.map(t=>{const s=r();return e("tr",{ref:s},t.map(t=>{const s=new E(null,this.player,{id:"reforge-optimizer-freeze-"+l[t],label:P.get(t),inline:!0,changedEvent:()=>this.freezeItemSlotsChangeEmitter,getValue:()=>this.frozenItemSlots.get(t)||!1,setValue:(e,s,i)=>{this.frozenItemSlots.set(t,i)}});return e("td",null,s.rootElem)}))}));return this.freezeItemSlotsChangeEmitter.on(()=>{a.value?.classList[this.freezeItemSlots?"remove":"add"]("d-none")}),o}buildCapsList({useCustomEPValuesInput:t,description:i}){const a={changedEvent:t=>d.onAny([this.sim.useSoftCapBreakpointsChangeEmitter,this.player.statCapsChangeEmitter])},n=r(),l=r(),u=r(),p=e("table",{ref:n,className:S("reforge-optimizer-stat-cap-table mb-2",!this.sim.getUseCustomEPValues()&&"hide")},e("thead",null,e("tr",null,e("th",{colSpan:3,className:"pb-3"},e("div",{className:"d-flex"},e("h6",{className:"content-block-title mb-0 me-1"},"Edit stat caps"),e("button",{ref:l,className:"d-inline"},e("i",{className:"fa-regular fa-circle-question"})),e("button",{ref:u,className:"d-inline ms-auto",onclick:()=>this.setDefaultStatCaps()},e("i",{className:"fas fa-arrow-rotate-left"}))))),e("tr",null,e("th",null,"Stat"),e("th",{colSpan:2,className:"text-end"},"%"))),e("tbody",null,this.simUI.individualConfig.displayStats.map(i=>{if(!i.hasRootStat())return;const n=i.getRootStat();if(!lt.includes(n))return;const l=r(),u=i.getShortName(this.player.getClass()),p={getValue:()=>this.toVisualUnitStatPercentage(this.statCaps.getUnitStat(i),i),setValue:(t,e,s)=>{this.setStatCap(i,this.toDefaultUnitStatValue(s,i))}},c=new B(null,this.player,{id:`reforge-optimizer-${u}-percentage`,float:!0,maxDecimalDigits:5,showZeroes:!1,positive:!0,extraCssClasses:["mb-0"],enableWhen:()=>this.isAllowedToOverrideStatCaps||!this.softCapsConfig.some(t=>t.unitStat.equals(i)),...a,...p}),h=this.statSelectionPresets?.find(t=>t.unitStat.equals(i))?.presets,f=h?new z(null,this.player,{id:`reforge-optimizer-${u}-presets`,extraCssClasses:["mb-0"],label:"",values:[{name:"Select preset",value:0},...[...h.keys()].map(t=>{const e=h.get(t);return{name:`${t} - ${e.toFixed(2)}%`,value:e}})].sort((t,e)=>t.value-e.value),enableWhen:()=>this.isAllowedToOverrideStatCaps||!this.softCapsConfig.some(t=>t.unitStat.equals(i)),...a,...p}):null,m=this.statTooltips[n],g=r(),d=e(s,null,e("tr",{ref:l,className:"reforge-optimizer-stat-cap-item"},e("td",null,e("div",{className:"reforge-optimizer-stat-cap-item-label"},u," ",m&&e("button",{ref:g,className:"d-inline"},e("i",{className:"fa-regular fa-circle-question"})))),e("td",{colSpan:2},c.rootElem)),f&&e("tr",null,e("td",null),e("td",{colSpan:2},f.rootElem))),S=m?o(g.value,{content:m}):null;return t.addOnDisposeCallback(()=>S?.destroy()),d})));if(l.value){const e=o(l.value,{content:"Stat caps are the maximum amount of a stat that can be gained from Reforging. If a stat exceeds its cap, the optimizer will attempt to reduce it to the cap value."});t.addOnDisposeCallback(()=>e.destroy())}if(u.value){const e=o(u.value,{content:"Reset to stat cap defaults"});t.addOnDisposeCallback(()=>e.destroy())}const c=this.sim.useCustomEPValuesChangeEmitter.on(()=>{const t=this.sim.getUseCustomEPValues();n.value?.classList[t?"remove":"add"]("hide"),i?.classList[t?"add":"remove"]("hide")});return t.addOnDisposeCallback(()=>{p.remove(),c.dispose()}),p}buildEPWeightsToggle({useCustomEPValuesInput:t}){const i=["mt-3"];this.sim.getUseCustomEPValues()||i.push("hide");const a=A(null,this.simUI,{extraCssClasses:i,loadOnly:!0}),o=this.sim.useCustomEPValuesChangeEmitter.on(()=>{const t=this.sim.getUseCustomEPValues();a.rootElem?.classList[t?"remove":"add"]("hide")});return t.addOnDisposeCallback(()=>{a.dispose(),a.rootElem.remove(),o.dispose()}),e(s,null,a.rootElem,this.simUI.epWeightsModal&&e("button",{className:"btn btn-outline-primary mt-2",onclick:()=>{this.simUI.epWeightsModal?.open(),u()}},"Edit weights"))}buildSoftCapBreakpointsLimiter({useSoftCapBreakpointsInput:t}){if(!this.enableBreakpointLimits||!t)return null;const i=r(),a=r(),n=e("table",{ref:i,className:S("reforge-optimizer-stat-cap-table mb-2",!this.sim.getUseSoftCapBreakpoints()&&"hide")},e("thead",null,e("tr",null,e("th",{colSpan:3,className:"pb-3"},e("div",{className:"d-flex"},e("h6",{className:"content-block-title mb-0 me-1"},"Breakpoint limit"),e("button",{ref:a,className:"d-inline"},e("i",{className:"fa-regular fa-circle-question"})))))),e("tbody",null,this.softCapsConfig.filter(t=>(t.capType===v.TypeThreshold||t.capType===v.TypeSoftCap)&&t.breakpoints.length>1).map(({breakpoints:t,unitStat:i})=>{if(!i.hasRootStat())return;const a=i.getRootStat();if(!lt.includes(a))return;const o=r(),n=i.getShortName(this.player.getClass()),l=t?new z(null,this.player,{id:`reforge-optimizer-${n}-presets`,extraCssClasses:["mb-0"],label:"",values:[{name:"No limit set",value:0},...t.map(t=>({name:`${this.breakpointValueToDisplayPercentage(t,i)}%`,value:t}))].sort((t,e)=>t.value-e.value),changedEvent:t=>d.onAny([this.sim.useSoftCapBreakpointsChangeEmitter]),getValue:()=>this.player.getBreakpointLimits().getUnitStat(i)||0,setValue:(t,e,s)=>{this.player.setBreakpointLimits(t,this.player.getBreakpointLimits().withUnitStat(i,s))}}):null;if(!l?.rootElem)return null;return e(s,null,e("tr",{ref:o,className:"reforge-optimizer-stat-cap-item"},e("td",null,e("div",{className:"reforge-optimizer-stat-cap-item-label"},n)),e("td",{colSpan:2},l.rootElem)))})));if(a.value){const e=o(a.value,{content:"Allows you to set a custom breakpoint limit."});t.addOnDisposeCallback(()=>e.destroy())}const l=this.sim.useSoftCapBreakpointsChangeEmitter.on(()=>{const t=this.sim.getUseSoftCapBreakpoints();i.value?.classList[t?"remove":"add"]("hide")});return t.addOnDisposeCallback(()=>{n.remove(),l?.dispose()}),n}get isAllowedToOverrideStatCaps(){return!(this.sim.getUseSoftCapBreakpoints()&&this.softCapsConfig)}get processedStatCaps(){let t=this.statCaps;return this.isAllowedToOverrideStatCaps||this.softCapsConfigWithLimits.forEach(({unitStat:e})=>{t=t.withUnitStat(e,0)}),t}async optimizeReforges(){this.previousGear=this.player.getGear(),this.previousReforges=this.previousGear.getAllReforges();let t=this.previousGear.withoutReforges(this.player.canDualWield2H(),this.frozenItemSlots);this.includeGems&&(t=t.withoutGems(this.player.canDualWield2H(),this.frozenItemSlots,!0));const e=await this.updateGear(t);let s=e.computeStatCapsDelta(this.processedStatCaps);this.player.getSpec()==i.SpecGuardianDruid&&(s=s.withPseudoStat(n.PseudoStatMeleeHastePercent,s.getPseudoStat(n.PseudoStatMeleeHastePercent)/1.5));const a=this.computeReforgeSoftCaps(e),o=ht.checkWeights(this.preCapEPs,s,a),r=this.buildYalpsVariables(t,o,s,a),l=this.buildYalpsConstraints(t,e);await this.solveModel(t,o,s,a,r,l,75e3),this.currentReforges=this.player.getGear().getAllReforges()}async updateGear(e){this.player.setGear(d.nextEventID(),e),await this.sim.updateCharacterStats(d.nextEventID());let s=g.fromProto(this.player.getCurrentStats().finalStats);return s=s.addStat(t.StatMasteryRating,this.player.getBaseMastery()*k),this.updateGearStatsModifier&&(s=this.updateGearStatsModifier(s)),s}computeReforgeSoftCaps(t){const e=[];return this.isAllowedToOverrideStatCaps||this.softCapsConfigWithLimits.slice().forEach(s=>{let i=s.postCapEPs.slice();const a=[];for(const e of s.breakpoints)a.push(t.computeGapToCap(s.unitStat,e));s.capType==v.TypeThreshold&&(a.reverse(),i=Array(a.length).fill(i[0])),e.push(new C(s.unitStat,a,s.capType,i))}),e}buildYalpsVariables(e,s,i,a){const o=new Map,n=this.simUI.individualConfig.epStats,r=this.buildGemOptions(s,i,a);for(const u of e.getItemSlots()){const c=e.getEquippedItem(u);if(!c||this.frozenItemSlots.get(u))continue;const h=c.withDynamicStats();for(const e of this.player.getAvailableReforgings(h)){if(!n.includes(e.toStat)&&e.toStat!=t.StatExpertiseRating)continue;const i=`${u}_${e.id}`,a=new Map;a.set(l[u],1),this.applyReforgeStat(a,e.fromStat,e.fromAmount,s),this.applyReforgeStat(a,e.toStat,e.toAmount,s),o.set(i,a)}if(!this.includeGems)continue;const f=c.item,m=c.curSocketColors(this.player.isBlacksmithing());this.includeEOTBPGemSocket||!G(f)&&!M(f)||m.pop();const d=new g(h.item.socketBonus).scale(1/(m.length||1)).getBuffedStats();let S=!1;const C=new Map;for(const[t,e]of d.entries())this.applyReforgeStat(C,t,e,s);ht.includesCappedStat(C,i,a)&&(S=!0);const b=new Map;b.set("matched",new Map),b.set("unmatched",new Map);for(const t of m.values()){if(![p.GemColorRed,p.GemColorBlue,p.GemColorYellow,p.GemColorPrismatic].includes(t))break;const e=b.get("matched"),s=r.get(t).at(-1);for(const[t,o]of s.coefficients.entries())e.set(t,(e.get(t)||0)+o);for(const[t,o]of C.entries())e.set(t,(e.get(t)||0)+o);const i=b.get("unmatched"),a=r.get(p.GemColorPrismatic).at(-1);for(const[t,o]of a.coefficients.entries())i.set(t,(i.get(t)||0)+o)}const y=this.updateReforgeScores(b,s);y.get("matched").get("score")>y.get("unmatched").get("score")&&(S=!0),m.forEach((t,e)=>{let i=[];if([p.GemColorPrismatic,p.GemColorCogwheel,p.GemColorShaTouched].includes(t))i.push(t);else{if(![p.GemColorRed,p.GemColorBlue,p.GemColorYellow].includes(t))return;i.push(t),S||i.push(p.GemColorPrismatic)}const a=`${u}_${e}`;for(const n of i)for(const e of r.get(n)){const i=`${a}_${e.gem.id}`,r=new Map(e.coefficients);if(r.set(a,1),I(e.gem,t))for(const[t,e]of d.entries())this.applyReforgeStat(r,t,e,s);else if(e.isJC)continue;n==p.GemColorCogwheel&&r.set(`${e.gem.id}`,1),n==p.GemColorShaTouched&&r.set("ShaTouchedGem",1),e.isJC&&r.set("JewelcraftingGem",1),o.set(i,r)}})}return o}buildGemOptions(e,s,i){const a=new Map;if(!this.includeGems)return a;const o=this.player.hasProfession(c.Jewelcrafting),n=this.simUI.individualConfig.epStats;for(const r of[p.GemColorPrismatic,p.GemColorShaTouched,p.GemColorCogwheel,p.GemColorRed,p.GemColorBlue,p.GemColorYellow]){const l=this.player.getGems(r),u=new Array;for(const s of l){const i=s.requiredProfession==c.Jewelcrafting;if(i&&!o||i&&!this.isTankSpec&&!T(s,[t.StatStrength,t.StatAgility,t.StatIntellect])||s.name.includes("Perfect")||!I(s,r))continue;let a=!0;const l=new Map;for(const[o,r]of s.stats.entries())if(0!=r){if(!n.includes(o)&&o!=t.StatExpertiseRating){a=!1;break}this.applyReforgeStat(l,o,r,e)}if(!a)continue;const p=new Map([["temp",l]]),h=this.updateReforgeScores(p,e);u.push({gem:s,isJC:i,coefficients:h.get("temp")})}u.sort((t,e)=>e.coefficients.get("score")-t.coefficients.get("score"));const h=new Array;let f=!1;for(const t of u)if(t.isJC&&f||h.push(t),!ht.includesCappedStat(t.coefficients,s,i)&&r!=p.GemColorCogwheel){if(!t.isJC)break;f=!0}a.set(r,h)}return a}applyReforgeStat(e,s,i,a){if((s==t.StatSpirit&&this.isHybridCaster||s==t.StatExpertiseRating)&&this.setPseudoStatCoefficient(e,n.PseudoStatSpellHitPercent,i/x),this.relativeStatCap?.updateCoefficients(e,s,i),0==a.getStat(s))for(const t of m.getChildren(s))0!=a.getPseudoStat(t)&&this.setPseudoStatCoefficient(e,t,m.fromPseudoStat(t).convertRatingToPercent(i));else this.setStatCoefficient(e,s,i)}setStatCoefficient(e,s,i){const a=e.get(t[s])||0;e.set(t[s],a+i)}setPseudoStatCoefficient(t,e,s){const i=t.get(n[e])||0;t.set(n[e],i+s)}buildYalpsConstraints(e,s){const i=new Map,a=this.includeGems?this.player.getGems(p.GemColorCogwheel):[];for(const t of e.getItemSlots())if(i.set(l[t],D(1)),this.includeGems){e.getEquippedItem(t)?.curSocketColors(this.player.isBlacksmithing()).forEach((e,s)=>{i.set(`${t}_${s}`,D(1))}),i.set("ShaTouchedGem",D(1)),i.set("JewelcraftingGem",D(2));for(const t of a)t.unique&&i.set(`${t.id}`,D(1))}if(this.relativeStatCap){const a=s.addStat(t.StatMasteryRating,-this.player.getBaseMastery()*k);this.relativeStatCap.updateConstraints(i,e,a)}return i}async solveModel(t,e,s,i,a,o,n){const r=this.updateReforgeScores(a,e),l=rt({objective:"score",constraints:o,variables:r},{timeout:1/0,maxIterations:n,tolerance:.01});if(isNaN(l.result)||this.includeGems&&"timedout"==l.status&&n<1e6){if(n>1e6)throw l;return await this.solveModel(t,e,s,i,a,o,2*n)}const u=await this.applyLPSolution(t,l),[p,c,h]=this.checkCaps(l,s,i,r,o,e);return p?(await R(100),await this.solveModel(u,h,s,i,r,c,n)):l.result}updateReforgeScores(e,s){const i=new Map;for(const[a,o]of e.entries()){let e=0;const r=new Map;for(const[i,a]of o.entries())if(r.set(i,a),i.includes("PseudoStat")){const t=n[i];e+=s.getPseudoStat(t)*a}else if(i.includes("Stat")){const o=t[i];e+=s.getStat(o)*a}r.set("score",e),i.set(a,r)}return i}async applyLPSolution(t,e){let s=t.withoutReforges(this.player.canDualWield2H(),this.frozenItemSlots);this.includeGems&&(s=s.withoutGems(this.player.canDualWield2H(),this.frozenItemSlots,!0));for(const[i,a]of e.variables){const t=i.split("_"),e=parseInt(t[0]),a=s.getEquippedItem(e);if(a){if(t.length>2){const i=parseInt(t[1]),a=parseInt(t[2]);s=s.withGem(e,i,this.sim.db.lookupGem(a));continue}const i=parseInt(t[1]);s=s.withEquippedItem(e,a.withReforge(this.sim.db.getReforgeById(i)),this.player.canDualWield2H())}}return await this.updateGear(s),s}checkCaps(e,s,i,a,o,r){let l=new g;for(const[h,f]of e.variables)for(const[e,s]of a.get(h).entries())if(e.includes("PseudoStat")){const t=n[e];l=l.addPseudoStat(t,s)}else if(e.includes("Stat")){const i=t[e];l=l.addStat(i,s)}let u=!1;const p=new Map(o);let c=r;for(const[t,n]of l.asUnitStatArray()){const e=s.getUnitStat(t),i=t.getKey();0!==e&&n>e&&!o.has(i)&&(p.set(i,L(e)),u=!0,c=c.withUnitStat(t,0))}for(;!u&&i.length>0;){const t=i[0],e=t.unitStat,s=e.getKey(),a=l.getUnitStat(e);let o=0;for(const i of t.breakpoints){if(a>i){p.set(s,L(i)),c=c.withUnitStat(e,t.postCapEPs[o]),u=!0;break}o++}t.capType==v.TypeSoftCap&&(t.breakpoints=t.breakpoints.slice(o+1),t.postCapEPs=t.postCapEPs.slice(o+1)),t.capType!=v.TypeThreshold&&0!=t.breakpoints.length||i.shift()}return[u,p,c]}get baseMastery(){return this.player.getBaseMastery()*k}toVisualTotalMasteryPercentage(t,e){return e-this.baseMastery<=0?t=0:t*=this.player.getMasteryPerPointModifier(),t}toVisualUnitStatPercentage(e,s){const i=e;let a=s.convertDefaultUnitsToPercent(i);return s.equalsStat(t.StatMasteryRating)&&(a=this.toVisualTotalMasteryPercentage(a,i)),a}toDefaultUnitStatValue(e,s){let i=s.convertPercentToDefaultUnits(e);return s.equalsStat(t.StatMasteryRating)&&(i/=this.player.getMasteryPerPointModifier()),i}breakpointValueToDisplayPercentage(e,s){return s.equalsStat(t.StatMasteryRating)?(e/k*this.player.getMasteryPerPointModifier()).toFixed(2):s.convertDefaultUnitsToPercent(e).toFixed(2)}onReforgeDone(){const t=this.player.getGear().getItemSlots(),i=new Map;for(const e of t){const t=this.previousReforges.get(e),s=this.currentReforges.get(e);h.equals(t?.reforge,s?.reforge)||i.set(e,s)}const a=i.size,o=r(),n=e(s,null,e("p",{className:"mb-0"},"The following items were reforged:"),e("ul",null,[...i].map(([t,s])=>{if(s){const i=P.get(t),{fromStat:a,toStat:o}=s,n=N.get(a),r=N.get(o);return e("li",null,i,": ",n," → ",r)}return e("li",null,P.get(t),": Removed reforge")})),e("div",{ref:o}));if(a){const t=V.toJson(this.simUI.toProto());t&&new O(o.value,{extraCssClasses:["btn-outline-primary"],getContent:()=>JSON.stringify(t),text:"Copy to Reforge Lite"})}new U({variant:"success",body:a?n:e(s,null,"No reforge changes were made!"),delay:a?5e3:3e3})}onReforgeError(t){this.previousGear&&this.updateGear(this.previousGear),new U({variant:"error",body:"Reforge optimization failed. Please try again, or report the issue if it persists."})}}export{ht as R};
